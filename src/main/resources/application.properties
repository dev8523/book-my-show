# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Show or not log for each sql query and properties
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.show-sql=true
spring.jpa.properties.hibernate.use_sql_comments = true
spring.jpa.properties.hibernate.format_sql = true

# This will enable debug logging for Hibernate, which should show you the actual SQL query being executed.
logging.level.org.hibernate.SQL=debug

# Hibernate ddl auto (create, update)
spring.jpa.hibernate.ddl-auto = update

# create -> everytime service is started all tables will be dropped and re-created, we will lose all data
# this can be used in local but should never be used in production
# update -> everytime service is started, only new changes are applied to the table, and they are not dropped
# data remains persistent, it can be used in production

#connection properties
spring.datasource.url = jdbc:mysql://localhost:3306/book_my_show

# in production this address will connect to your DB machine { ip:port }
spring.datasource.username = root
spring.datasource.password = Deba@8523

# MySQL driver class
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
